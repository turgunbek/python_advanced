from abc import abstractmethod, ABC


class PokemonTrainInterface(ABC):
    """
    –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø–æ–∫–µ–º–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã:
    increase_experience,
    experience
    """

    @abstractmethod
    def increase_experience(self, value: int) -> None:
        pass

    @property
    @abstractmethod
    def experience(self) -> int:
        pass


class BasePokemon(PokemonTrainInterface):
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–æ–∫–µ–º–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è:
    name - –∏–º—è –ø–æ–∫–µ–º–æ–Ω–∞,
    poketype - —Ç–∏–ø –ø–æ–∫–µ–º–æ–Ω–∞,
    _experience - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω–æ 100
    –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Ç–æ–¥ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ __str__
    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ PokemonTrainInterface, –µ—Å—Ç—å –º–µ—Ç–æ–¥—ã:
    increase_experience - —É–≤–µ–ª–∏—á–∏—Ç—å –æ–ø—ã—Ç
    experience - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞
    """

    def __init__(self, name: str, poketype: str):
        """
        –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –∏–º—è –∏ —Ç–∏–ø –ø–æ–∫–µ–º–æ–Ω–∞, –∞ —Ç–∞–∫–∂–µ
        –Ω–∞—á–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç
        """
        self.name = name
        self.poketype = poketype
        self._experience = 100

    def __str__(self) -> str:
        """–º–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
        """
        return f'{self.name}/{self.poketype}'

    def increase_experience(self, value: int) -> None:
        """—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –æ–ø—ã—Ç –Ω–∞ –≤–µ–ª–∏—á–∏–Ω—É value
        """
        self.experience += value

    @property
    def experience(self) -> int:
        """–≤—ã–≤–æ–¥–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –ø–æ–∫–µ–º–æ–Ω–∞
        """
        return self._experience

    @experience.setter
    def experience(self, value) -> int:
        """—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤ –ø–æ–ª–µ _experience –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ value
        """
        self._experience = value


class EmojiMixIn:
    """
    –ú–∏–∫—Å–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ __str__ –∑–∞–º–µ–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —ç–º–æ–¥–∂–∏
    """

    emojis = {'grass': 'üåø', 'fire': 'üî•', 'water': 'üåä', 'electric': '‚ö°'}

    def __str__(self):
        return f'{self.name}/{self.emojis[self.poketype]}'


class Pokemon(EmojiMixIn, BasePokemon):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–∫–µ–º–æ–Ω–æ–≤ Pokemon, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –∫–ª–∞—Å—Å–æ–≤
    EmojiMixIn –∏ BasePokemon
    """
    pass


if __name__ == '__main__':
    bulbasaur = Pokemon(name='Bulbasaur', poketype='grass')
    print(f'pokemon = {bulbasaur}, experience = {bulbasaur.experience}')
    # Out:
    # pokemon = Bulbasaur/üåø, pokemon's experience = 100

    bulbasaur.increase_experience(100)
    print('After increasing exp:')
    print(f'pokemon = {bulbasaur}, experience = {bulbasaur.experience}')
    # Out:
    # After increasing exp:
    # pokemon = Bulbasaur/üåø, pokemon's experience = 200

    assert bulbasaur.experience == 200, 'Try harder, Neeman'

    pikachu = Pokemon(name='Pikachu', poketype='electric')
    print(pikachu)
    # Out:
    # Pikachu/‚ö°

    pikachu.increase_experience(42)
    print('After increasing exp:')
    print(f'pokemon = {pikachu}, experience = {pikachu.experience}')
    # Out:
    # After increasing exp:
    # pokemon = Pikachu/‚ö°, experience = 142
